[ CodeBlock {
    statements: 
     [ ClassStatement {
         access: [ null, null ],
         name: Identifier { identifier: 'A' },
         superclasses: null,
         statements: 
          CodeBlock {
            statements: 
             [ FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'b' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } },
               FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'c' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } } ],
            scope: Map { _c: Map {} } } } ],
    scope: Map { _c: Map {} } },
  CodeBlock {
    statements: 
     [ ClassStatement {
         access: [ null, null ],
         name: Identifier { identifier: 'A' },
         superclasses: null,
         statements: 
          CodeBlock {
            statements: 
             [ FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'b' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } },
               FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'c' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } } ],
            scope: Map { _c: Map {} } } } ],
    scope: Map { _c: Map {} } },
  CodeBlock {
    statements: 
     [ ClassStatement {
         access: [ null, null ],
         name: Identifier { identifier: 'A' },
         superclasses: null,
         statements: 
          CodeBlock {
            statements: 
             [ FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'b' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } },
               FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'c' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } } ],
            scope: Map { _c: Map {} } } } ],
    scope: Map { _c: Map {} } },
  CodeBlock {
    statements: 
     [ ClassStatement {
         access: [ null, null ],
         name: Identifier { identifier: 'A' },
         superclasses: null,
         statements: 
          CodeBlock {
            statements: 
             [ FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'b' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } },
               FunctionStatement {
                 access: [ null, null ],
                 name: Identifier { identifier: 'c' },
                 args: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'x' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: false } },
                    defaultValue: null },
                 returnType: 
                  FunctionArgument {
                    typedId: 
                     TypedIdentifier {
                       identifier: Identifier { identifier: 'y' },
                       type: Type { path: [ Identifier { identifier: 'T' } ], optional: true } },
                    defaultValue: null },
                 statements: { value: 'internal' } } ],
            scope: Map { _c: Map {} } } } ],
    scope: Map { _c: Map {} } },
  tokens: 33 ]